#!/usr/bin/env python
import rospy
import numpy as np
from rospy.numpy_msg import numpy_msg
from sensor_msgs.msg import Image
import cv2
from cv_bridge import CvBridge
from scipy import ndimage

# get the cv2 bridge
bridge = CvBridge()

rospy.init_node("rotate_img")

# get the publisher to the rotated image topic with queue_size of 1
img_pub = rospy.Publisher(rospy.get_param("~rotated_img_topic")+'/image_raw',
                          numpy_msg(Image),
                          queue_size=1)

# define the image message callback function
def img_cb(img_msg):
    # convert the message to a cv2 image usung the CvBridge
    cv2_img = bridge.imgmsg_to_cv2(img_msg)
    # rotate the image with cv2
    cv2_rotated = cv2.rotate(cv2_img, cv2.ROTATE_90_CLOCKWISE)
    # convert the rotated cv2 message back into a ros message using the CvBridge
    # note: it is crucial that the new iamge message has the same encoding as the img_msg
    rotated_msg = bridge.cv2_to_imgmsg(cv2_rotated, encoding=img_msg.encoding)
    # publish the rotated ros msg image
    img_pub.publish(rotated_msg)

# get the sub scriber from the original img topic
img_sub = rospy.Subscriber(rospy.get_param("~original_img_topic")+'/image_raw',
                           numpy_msg(Image),
                           img_cb)

# rospy spin
rospy.spin()
